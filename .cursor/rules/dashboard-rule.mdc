## Проект: Финансовый офлайн-дашборд (single-file app + assets)

### Назначение
- Локальный офлайн‑дашборд: импорт банковской выписки из XML, просмотр агрегатов/графиков, добавление кастомных записей, экспорт данных.
- Отдельная страница Gross/Net: расчёт брутто/нетто зарплаты по правилам BG (2025), сравнение и график.
- Работа строго локально: без сетевых запросов. Открываем HTML-файлы в браузере (Chrome/Edge), интернет не требуется.

### Технологии
- Языки: HTML, CSS, JavaScript (ES2020+). Без фреймворков и bundlers.
- Хранение: `localStorage` (plain JSON): ключ `ofb_vault` (дашборд), `gn_state` (Gross/Net), `finboard_theme` (тема).
- Графики: Canvas 2D (см. `assets/charts.js`).
- Парсинг XML: `DOMParser` + эвристики, поддержка BOM/UTF‑16/UTF‑8 (см. `assets/xml.js`).

### Точки входа и структура
- Основная страница: `index.html`
  - Подключает стили и скрипты из `assets/`, содержит весь UI дашборда и модальные окна (импорт выписок, категории/правила, добавление записи).
- Gross/Net калькулятор: `gross-net.html`
  - Подключает `assets/grossnet.js`, использует общую тему и графики, хранит своё состояние в `gn_state`.
- Справка: встроенный блок из `helpHTML()` (см. `assets/help.js`) на обеих страницах, показывается кнопкой «Справка» в хедере.
- Каталог данных примеров: `Data/` (например, `Data/test.xml`).

#### assets/
- `assets/styles.css` — тема, сетка, кнопки, адаптив и базовые утилиты CSS.
- `assets/help.js` — функция `helpHTML()` для блока «Как пользоваться» (вставляется в главный контент).
- `assets/xml.js` — импорт выписки из XML.
- `assets/charts.js` — отрисовка графиков: столбчатая (доход/расход), линейная (итог), пончик (категории).
- `assets/app.js` — логика дашборда: фильтры/агрегации/прогнозы/категории/импорт/экспорт/модальные окна.
- `assets/grossnet.js` — логика страницы Gross/Net.

### Основные разделы UI (дашборд)
- Хедер: навигация между `index.html` и `gross-net.html`, переключатель темы, кнопка «Справка», очистка данных.
- Фильтр/статистика: вкладки фильтра по операциям (все/доходы/расходы), глобальный фильтр категории, режим периода (год/сезон/месяц/неделя/день/диапазон), агрегация (месяц/неделя/день), прогноз (выкл/до конца периода/усреднённый 12м).
- Карточки с графиками: «Доходы/Расходы», «Чистый итог», «Анализ расходов (пончик)»; кнопка разворота каждой в модал.
- Таблица «Операции»: поиск по описанию/категории, ограничение количества, инлайн назначение категории, удаление только для ручных записей, копирование описаний в JSON.
- Импорт/Экспорт/Категории: открываются в модальном окне из фильтра (кнопки «Выписки», «Категории», «Добавить запись»).

### Модель данных (localStorage → plain JSON)
```
{
  currency: string,              // 'BGN' | 'EUR' | 'USD' | 'UAH'
  transactions: Array<{
    id: string,
    date: 'YYYY-MM-DD',
    desc: string,
    amount: number,              // + доход, − расход
    category?: string|null,
    source: 'import'|'manual',
    // Доп. поля из XML для тултипов/категоризации
    trName?: string|null,
    nameR?: string|null,
    remI?: string|null,
    remII?: string|null
  }>,
  adjustments: { [month: string]: number },
  categories: string[],
  catRules: Array<{ id: string, match: string, category: string }>,
  createdAt: ISODate,
  version: number
}
```

### Импорт XML — эвристики
- Поиск контейнера транзакций по наличию дочерних тегов суммы/даты (регистронезависимо).
- Дата: `bookingDate`/`valueDate`/`posted`/`postDate`/`post_date`/`POST_DATE` и др.
- Сумма: `amount`/`creditAmount`/`debitAmount`/`entryAmount` и производные, а также UBBS‑поля `AMOUNT_C`/`AMOUNT_D`.
- Знак суммы: по полям credit/debit, индикаторам `CR/DR`, префиксу «−»; при `AMOUNT_C` — плюс, при `AMOUNT_D` — минус.
- Валюта: из атрибутов `ccy|currency|curr` или близких тегов.
- Описание: составляется из `NAME_R`/`REM_II`/`REM_I` (исключая тех.коды), `TR_NAME` сохраняется отдельно для подсказок.
- Поддержка файлов в UTF‑16LE/BE и UTF‑8 (BOM‑sniffing).
- CSV импорт отключён (парсер сохранён как утилита, но не используется в UI).

### Экспорт
- Хранилище: plain JSON (зашифрованный режим отключён по умолчанию).
- Агрегаты: `{ currency, generatedAt, data:[{month,income,expense,net,count}] }`.

### CSP и офлайн‑ограничения
- CSP (в HTML):
  - `default-src 'self' 'unsafe-inline' blob: data: file:`
  - `script-src 'self' 'unsafe-inline' 'unsafe-eval'`
  - `style-src 'self' 'unsafe-inline'`
  - `img-src 'self' data: blob:`
  - `connect-src 'none'`, `frame-src 'none'`
- Никаких сетевых запросов. Файлы пользователь выбирает вручную (drag&drop/выбор), авто‑чтение каталогов запрещено политикой браузера.

### Правила разработки
- Языки: только HTML/CSS/JS. Не добавлять сборщики, фреймворки и внешние CDN.
- Индентация: сохранять существующую (пробелы), не изменять стиль в несвязанных местах.
- Код‑стиль JS:
  - Понятные имена функций/переменных, ранний возврат, обработка краевых случаев.
  - Без лишних глобалов; новые функции класть в соответствующие файлы в `assets/`.
  - Комментарии — по существу «зачем», а не «как».
- UI/UX:
  - Все `input/select/textarea` и `input[type=file]` тянут на 100% ширины родителя.
  - Сетки используют `minmax(0,1fr)`; дочерние — `min-width:0` для предотвращения ломки колонок.
  - Кнопки для файлов всегда парные: «Выбрать …» и «Очистить выбор» одинаковой высоты.

- ### Навигация/файлы
- Главная: `index.html` — дашборд.
- Калькулятор: `gross-net.html` — расчёты брутто/нетто (без доступа к `ofb_vault`).
- Справка: встроенный блок `helpHTML()`.
- Assets подключаются тегами `<link rel="stylesheet" href="assets/styles.css">`, `<script src="assets/*.js">`.

### Gross/Net калькулятор (кратко)
- Состояние: `gn_state` в `localStorage`; тема общая (`finboard_theme`).
- Ввод: ежемесячная/годовая брутто, стаж (0.6%/год), месяц/год для рабочих/календарных дней, опции: больничные (первые 2 раб.дня 70% работодателя, не облагаются 10%), овертайм (дни/часы ×2), Sport Card, страховка, корректировка.
- Правила 2025: удержания работника 13.78% от осигурителна база; cap 3750 до 03.2025 и 4130 с 04.2025; НДФЛ 10% от базы (без суммы за дни 1–2 по 70%).
- Вывод KPI: Net/Gross месяц/год/день/час (раб/календарный), график Gross vs Net, сравнение двух значений. Конверсия BGN→EUR/USD (фикс. курсы в коде).

### Задачи на будущее (опционально)
- Переключаемый режим шифрования (AES‑GCM + PBKDF2), переключатель: «без пароля / с паролем» (сейчас выключено).
- Редактирование/удаление строк в таблице «Операции» (массово, не только ручные).